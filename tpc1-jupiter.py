{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "ename": "IndentationError",
     "evalue": "unexpected indent (<ipython-input-1-cc041fed1439>, line 119)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  File \u001b[1;32m\"<ipython-input-1-cc041fed1439>\"\u001b[1;36m, line \u001b[1;32m119\u001b[0m\n\u001b[1;33m    resto=21\u001b[0m\n\u001b[1;37m    ^\u001b[0m\n\u001b[1;31mIndentationError\u001b[0m\u001b[1;31m:\u001b[0m unexpected indent\n"
     ]
    }
   ],
   "source": [
    "#jogo dos fósforos\n",
    "\n",
    "#alinea a) - o jogador contra o computador\n",
    "\n",
    "import random \n",
    "\n",
    "def fosforos1 ():\n",
    "    quem=input(\"quem vai jogar primeiro: \\n escreva 'eu' para jogar primeiro ou 'pc' para o computador jogar primeiro:   \")\n",
    "    if quem==\"eu\":\n",
    "        resto=21\n",
    "        while resto>1:\n",
    "            n=int(input(\"introduza o numero 1, 2, 3 ou 4:  \" ))\n",
    "            if n>=5:\n",
    "                print (\"numero invalido \")  \n",
    "            else:\n",
    "                resto=resto - n\n",
    "                if resto==1:\n",
    "                    print(\"sobrou um fosforo o jogador ganhou \\n\")\n",
    "                    print (\"fim\\n\")\n",
    "                    return resto\n",
    "\n",
    "                else:\n",
    "                     print (\"existem \", resto, \"fosforos \\n\")\n",
    "                     n2=random.randint(1,4)\n",
    "                     if n2>resto:\n",
    "                             while n2>= resto:\n",
    "                                 n2=random.randint(1,4)\n",
    "                     else: \n",
    "                            print (\"o computador joga: \", n2, \"\\n\")\n",
    "                            resto= resto - n2\n",
    "\n",
    "                            if resto>1:\n",
    "                                print (\"existem ainda \", resto, \"fosforos \\n\")\n",
    "                            elif resto==1:            \n",
    "                                print(\"Sobrou um fosforo. o computador ganha \\n \")\n",
    "                                print (\"fim \\n\")\n",
    "                          \n",
    "    elif quem==\"pc\":\n",
    "        resto=21\n",
    "        while resto>1:\n",
    "            n2=random.randint(1,4)\n",
    "            if n2>resto:\n",
    "                    while n2>= resto:\n",
    "                        n2=random.randint(1,4)\n",
    "            else: \n",
    "                    print (\"o computador joga: \", n2, \"\\n\")\n",
    "                    resto= resto - n2\n",
    "\n",
    "                    if resto>1:\n",
    "                        print (\"existem ainda \", resto, \"fosforos \\n\")\n",
    "                    elif resto==1:            \n",
    "                        print(\"Sobrou um fosforo. o computador ganha \\n\")\n",
    "                        print (\"fim\")\n",
    "                        \n",
    "            n=int(input(\"introduza o numero 1, 2, 3 ou 4:  \\n\" ))\n",
    "            if n>=5:\n",
    "                    print (\"numero invalido \\n \")  \n",
    "            else:\n",
    "                    resto=resto - n\n",
    "                    if resto==1:\n",
    "                        print(\"sobrou um fosforo o jogador ganhou \\n\")\n",
    "                        print (\"fim \\n\")\n",
    "                        return resto\n",
    "\n",
    "                    else:\n",
    "                        print (\"existem \", resto, \"fosforos \\n \")\n",
    "                     \n",
    "    else: \n",
    "        print (\"resposta inválida tente novamente \\n\")\n",
    "\n",
    "    return resto\n",
    "\n",
    "fosforos1()\n",
    "\n",
    "\n",
    "#alinea b) - o computador joga em 2º lugar e ganha sempre\n",
    "\n",
    "def fosforos2 ():\n",
    "    resto=21\n",
    "    while resto>1:\n",
    "        n=int(input(\"introduza o numero 1, 2, 3 ou 4:  \\n\"))\n",
    "        if n>=5:\n",
    "            print (\"numero invalido \\n\")  \n",
    "        else:\n",
    "            n2= 5-n\n",
    "            resto=resto - n\n",
    "            print (\"existem \", resto, \"fosforos \\n\")\n",
    "            print (\"o computador joga: \", n2, \"\\n\")\n",
    "            resto= resto - n2\n",
    "            if resto>1:\n",
    "                print (\"existem ainda \", resto, \"fosforos \\n\")\n",
    "            else:\n",
    "                print(\"Sobrou um fosforo. o computador ganha \\n\")\n",
    "                print(\"fim \\n\")\n",
    "    return resto\n",
    "\n",
    "fosforos2()\n",
    " \n",
    "    \n",
    "#alinea c) - o computador joga em primeiro lugar e tenta apanhar um erro de raciocinio do jogador  \n",
    "\n",
    "def fosforos3():\n",
    "    resto=21\n",
    "    n2=random.randint(1,4)\n",
    "    print (\"o computador joga: \", n2, \"\\n\")\n",
    "    resto= resto - n2\n",
    "    print (\"existem ainda \", resto, \"fosforos \\n\")\n",
    "    op=True\n",
    "    n=int(input(\"introduza o numero 1, 2, 3 ou 4:  \\n\" ))\n",
    "    if n>=5:\n",
    "        print (\"numero invalido \\n\")\n",
    "        op=False\n",
    "        while op==False: \n",
    "             n=int(input(\"introduza o numero 1, 2, 3 ou 4:  \\n\" ))\n",
    "             if n>=5:\n",
    "                 print (\"numero invalido \\n\")\n",
    "                 op=False\n",
    "             else:\n",
    "                 op=True\n",
    "    else:\n",
    "          resto= resto - n\n",
    "          print (\"existem ainda \", resto, \"fosforos \\n\")\n",
    "    \n",
    "\n",
    "    while (n+n2)==5:\n",
    "                    n2=random.randint(1,4)\n",
    "                    print (\"o computador joga: \", n2, \"\\n\")\n",
    "                    resto= resto - n2\n",
    "                    if resto==1:\n",
    "                        print(\"sobrou um fosforo o computador ganhou \\n\")\n",
    "                        print (\"fim \\n\")\n",
    "                        return resto\n",
    "                    else:\n",
    "                        print (\"existem ainda \", resto, \"fosforos \\n\")              \n",
    "                        n=int(input(\"introduza o numero 1, 2, 3 ou 4:  \\n\" ))\n",
    "                        \n",
    "                        \n",
    "                        if n>=5:\n",
    "                            print (\"numero invalido \\n\")\n",
    "                            op=False\n",
    "                            while op==False: \n",
    "                                n=int(input(\"introduza o numero 1, 2, 3 ou 4:  \\n\" ))\n",
    "                                if n>=5:\n",
    "                                    print (\"numero invalido \\n\")\n",
    "                                    op=False\n",
    "                                else:\n",
    "                                        op=True\n",
    "                        else:\n",
    "                              resto= resto - n\n",
    "                                                       \n",
    "                              if resto==1:\n",
    "                                print(\"sobrou um fosforo o jogador ganhou \\n\")\n",
    "                                print (\"fim \\n\")\n",
    "                                return resto\n",
    "                              else:\n",
    "                                print (\"existem ainda \", resto, \"fosforos \\n\")\n",
    "     \n",
    "    if (n+n2)<5:\n",
    "                n2=5-(n+n2)\n",
    "\n",
    "                print (\"o computador joga: \", n2, \"\\n\")\n",
    "                resto= resto - n2\n",
    "                print (\"existem ainda \", resto, \"fosforos \\n\")\n",
    "    elif (n+n2)>5:\n",
    "\n",
    "                n2=10-(n+n2)\n",
    "                print (\"o computador joga: \", n2, \"\\n\")\n",
    "                resto= resto - n2\n",
    "                print (\"existem ainda \", resto, \"fosforos \\n\")\n",
    "\n",
    "    while resto>1:\n",
    "                n=int(input(\"introduza o numero 1, 2, 3 ou 4:  \\n\" ))\n",
    "                resto= resto-n\n",
    "                if n>=5:\n",
    "                    print (\"numero invalido \\n\")  \n",
    "                else:\n",
    "                    n2= 5-n\n",
    "                    resto=resto - n\n",
    "                    print (\"existem \", resto, \"fosforos \\n\")\n",
    "                    print (\"o computador joga: \", n2, \"\\n\")\n",
    "                    resto= resto - n2\n",
    "                    if resto>1:\n",
    "                        print (\"existem ainda \", resto, \"fosforos \\n\")\n",
    "                    else:\n",
    "                        print(\"Sobrou um fosforo. o computador ganha \\n\")\n",
    "                        print(\"fim \\n\")\n",
    "    return resto\n",
    "    \n",
    "fosforos3() \n",
    "              \n",
    "    \n",
    "\n",
    "\n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'fosforos1' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-28-443f4012db08>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mfosforos1\u001b[0m \u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m: name 'fosforos1' is not defined"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
